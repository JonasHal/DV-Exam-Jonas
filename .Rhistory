arrange(kommune, SampleDate)
dc$kommune <- str_replace(dc$kommune, "Copenhagen", "København")
# merge data together
dc <- merge(dc, dsize)
head(dc, 50)
# create new variables
dc %<>%
group_by(kommune) %>%
mutate(
casesDPer100k = casesDiagnosed / (population / 100000),
casesWPer100k = roll_sum(casesDPer100k, width = 7, min_obs = 1)
)
dc$casesDiagnosed <- as.integer(dc$casesDiagnosed)
head(dc, 50)
dk_data <- dc
View(dc)
# Load Used Data
dc <- read_delim(here("Data", "Municipality_cases_time_series.csv"), ";", escape_double = FALSE, trim_ws = TRUE)
dsize <- read_delim(here("Data", "Municipality_test_pos.csv"), ";", escape_double = FALSE, trim_ws = TRUE)
dk <- st_read(here("shapefiles/gadm36_DNK_2.shp"))
#Replace names to fit the Polygons
dk$NAME_2 <- str_replace(dk$NAME_2, "Århus", "Aarhus")
dk$NAME_2 <- str_replace(dk$NAME_2, "Høje Taastrup", "Høje-Taastrup")
dk$NAME_2 <- str_replace(dk$NAME_2, "Vesthimmerland", "Vesthimmerlands")
# make data compatible rename columns for merging
dsize <- dsize %>%
select(contains("Kom"), Befolkningstal) %>%
rename("kID" = `Kommune_(id)`, "kommune" = `Kommune_(navn)`, population = Befolkningstal) %>%
mutate(population = population * 1000) %>%
select(-kID)
View(dc)
View(dsize)
# make data tidy
dc %<>%
# use pivot_longer to transpose all columns (apart from date_sample) to two columns 'kommune',
#  'testsConducted'
#'casesDiagnosed'
#that hold the name of the kommune and the values of the number of diagnosed cases
pivot_longer(cols = !SampleDate, names_to = "kommune", values_to = "casesDiagnosed") %>%
arrange(kommune, SampleDate)
dc$kommune <- str_replace(dc$kommune, "Copenhagen", "København")
# merge data together
dc <- merge(dc, dsize)
head(dc, 50)
# create new variables
dc %<>%
group_by(kommune) %>%
mutate(
casesDPer100k = casesDiagnosed / (population / 100000),
casesWPer100k = roll_sum(casesDPer100k, width = 7, min_obs = 1)
)
dc$casesDiagnosed <- as.integer(dc$casesDiagnosed)
head(dc, 50)
dk_data <- dc
# make data tidy
dc %<>%
# use pivot_longer to transpose all columns (apart from date_sample) to two columns 'kommune',
#  'testsConducted'
#'casesDiagnosed'
#that hold the name of the kommune and the values of the number of diagnosed cases
pivot_longer(cols = !SampleDate, names_to = "kommune", values_to = "casesDiagnosed") %>%
arrange(kommune, SampleDate)
# Load Used Data
dc <- read_delim(here("Data", "Municipality_cases_time_series.csv"), ";", escape_double = FALSE, trim_ws = TRUE)
dsize <- read_delim(here("Data", "Municipality_test_pos.csv"), ";", escape_double = FALSE, trim_ws = TRUE)
dk <- st_read(here("shapefiles/gadm36_DNK_2.shp"))
#Replace names to fit the Polygons
dk$NAME_2 <- str_replace(dk$NAME_2, "Århus", "Aarhus")
dk$NAME_2 <- str_replace(dk$NAME_2, "Høje Taastrup", "Høje-Taastrup")
dk$NAME_2 <- str_replace(dk$NAME_2, "Vesthimmerland", "Vesthimmerlands")
# make data compatible rename columns for merging
dsize <- dsize %>%
select(contains("Kom"), Befolkningstal) %>%
rename("kID" = `Kommune_(id)`, "kommune" = `Kommune_(navn)`, population = Befolkningstal) %>%
mutate(population = population * 1000) %>%
select(-kID)
# make data tidy
dc %<>%
# use pivot_longer to transpose all columns (apart from date_sample) to two columns 'kommune',
#  'testsConducted'
#'casesDiagnosed'
#that hold the name of the kommune and the values of the number of diagnosed cases
pivot_longer(cols = !SampleDate, names_to = "kommune", values_to = "casesDiagnosed") %>%
arrange(kommune, SampleDate)
dc$kommune <- str_replace(dc$kommune, "Copenhagen", "København")
# merge data together
head(dc, 50)
dc <- merge(dc, dsize)
head(dc, 50)
# create new variables
dc %<>%
group_by(kommune) %>%
mutate(
casesDPer100k = casesDiagnosed / (population / 100000),
casesWPer100k = roll_sum(casesDPer100k, width = 7, min_obs = 1)
)
dc$casesDiagnosed <- as.integer(dc$casesDiagnosed)
head(dc, 50)
dk_data <- dc
# Load Used Data
dc <- read_delim(here("Data", "Municipality_cases_time_series.csv"), ";", escape_double = FALSE, trim_ws = TRUE)
dsize <- read_delim(here("Data", "Municipality_test_pos.csv"), ";", escape_double = FALSE, trim_ws = TRUE)
dk <- st_read(here("shapefiles/gadm36_DNK_2.shp"))
#Replace names to fit the Polygons
dk$NAME_2 <- str_replace(dk$NAME_2, "Århus", "Aarhus")
dk$NAME_2 <- str_replace(dk$NAME_2, "Høje Taastrup", "Høje-Taastrup")
dk$NAME_2 <- str_replace(dk$NAME_2, "Vesthimmerland", "Vesthimmerlands")
# make data compatible rename columns for merging
dsize <- dsize %>%
select(contains("Kom"), Befolkningstal) %>%
rename("kID" = `Kommune_(id)`, "kommune" = `Kommune_(navn)`, population = Befolkningstal) %>%
mutate(population = population * 1000) %>%
select(-kID)
head(dsize, 5)
# make data compatible rename columns for merging
dsize <- dsize %>%
select(contains("Kom"), Befolkningstal) %>%
rename("kID" = `Kommune_(id)`, "kommune" = `Kommune_(navn)`, population = Befolkningstal) %>%
mutate(population = population * 1000) %>%
select(-kID)
# Load Used Data
dc <- read_delim(here("Data", "Municipality_cases_time_series.csv"), ";", escape_double = FALSE, trim_ws = TRUE)
dsize <- read_delim(here("Data", "Municipality_test_pos.csv"), ";", escape_double = FALSE, trim_ws = TRUE)
dk <- st_read(here("shapefiles/gadm36_DNK_2.shp"))
#Replace names to fit the Polygons
dk$NAME_2 <- str_replace(dk$NAME_2, "Århus", "Aarhus")
dk$NAME_2 <- str_replace(dk$NAME_2, "Høje Taastrup", "Høje-Taastrup")
dk$NAME_2 <- str_replace(dk$NAME_2, "Vesthimmerland", "Vesthimmerlands")
# make data compatible rename columns for merging
dsize <- dsize %>%
select(contains("Kom"), Befolkningstal) %>%
rename("kID" = `Kommune_(id)`, "kommune" = `Kommune_(navn)`, population = Befolkningstal) %>%
mutate(population = population * 1000) %>%
select(-kID)
head(dsize, 102)
View(dsize)
library(here)
library(tidyverse)
library(roll)
library(dplyr)
library(magrittr)
library(leaflet)
library(sf)
library(ggplot2)
library(data.table)
library(plotly)
library(scales)
library(lubridate)
library(mapview)
library(dplyr)
# Load Used Data
dc <- read_delim(here("Data", "Municipality_cases_time_series.csv"), ";", escape_double = FALSE, trim_ws = TRUE)
dsize <- read_delim(here("Data", "Municipality_test_pos.csv"), ";", escape_double = FALSE, trim_ws = TRUE)
dk <- st_read(here("shapefiles/gadm36_DNK_2.shp"))
#Replace names to fit the Polygons
dk$NAME_2 <- str_replace(dk$NAME_2, "Århus", "Aarhus")
dk$NAME_2 <- str_replace(dk$NAME_2, "Høje Taastrup", "Høje-Taastrup")
dk$NAME_2 <- str_replace(dk$NAME_2, "Vesthimmerland", "Vesthimmerlands")
# make data compatible rename columns for merging
dsize <- dsize %>%
select(contains("Kom"), Befolkningstal) %>%
rename("kID" = `Kommune_(id)`, "kommune" = `Kommune_(navn)`, population = Befolkningstal) %>%
mutate(population = population * 1000) %>%
select(-kID)
head(dsize, 102)
# make data tidy
dc %<>%
# use pivot_longer to transpose all columns (apart from date_sample) to two columns 'kommune',
#  'testsConducted'
#'casesDiagnosed'
#that hold the name of the kommune and the values of the number of diagnosed cases
pivot_longer(cols = !SampleDate, names_to = "kommune", values_to = "casesDiagnosed") %>%
arrange(kommune, SampleDate)
dc$kommune <- str_replace(dc$kommune, "Copenhagen", "København")
# merge data together
df$X100 <- NULL
dc <- merge(dc, dsize)
# create new variables
dc %<>%
group_by(kommune) %>%
mutate(
casesDPer100k = casesDiagnosed / (population / 100000),
casesWPer100k = roll_sum(casesDPer100k, width = 7, min_obs = 1)
)
dc$casesDiagnosed <- as.integer(dc$casesDiagnosed)
head(dc, 50)
dk_data <- dc
View(dc)
# Load Used Data
dc <- read_delim(here("Data", "Municipality_cases_time_series.csv"), ";", escape_double = FALSE, trim_ws = TRUE)
dsize <- read_delim(here("Data", "Municipality_test_pos.csv"), ";", escape_double = FALSE, trim_ws = TRUE)
dk <- st_read(here("shapefiles/gadm36_DNK_2.shp"))
# Load Used Data
dc <- read_delim(here("Data", "Municipality_cases_time_series.csv"), ";", escape_double = FALSE, trim_ws = TRUE)
df$X100 <- NULL
View(dc)
# Load Used Data
dc <- read_delim(here("Data", "Municipality_cases_time_series.csv"), ";", escape_double = FALSE, trim_ws = TRUE)
df$x100 <- NULL
# Load Used Data
dc <- read_delim(here("Data", "Municipality_cases_time_series.csv"), ";", escape_double = FALSE, trim_ws = TRUE)
dc$X100 <- NULL
dsize <- read_delim(here("Data", "Municipality_test_pos.csv"), ";", escape_double = FALSE, trim_ws = TRUE)
dk <- st_read(here("shapefiles/gadm36_DNK_2.shp"))
#Replace names to fit the Polygons
dk$NAME_2 <- str_replace(dk$NAME_2, "Århus", "Aarhus")
dk$NAME_2 <- str_replace(dk$NAME_2, "Høje Taastrup", "Høje-Taastrup")
dk$NAME_2 <- str_replace(dk$NAME_2, "Vesthimmerland", "Vesthimmerlands")
# make data compatible rename columns for merging
dsize <- dsize %>%
select(contains("Kom"), Befolkningstal) %>%
rename("kID" = `Kommune_(id)`, "kommune" = `Kommune_(navn)`, population = Befolkningstal) %>%
mutate(population = population * 1000) %>%
select(-kID)
head(dsize, 102)
# make data tidy
dc %<>%
# use pivot_longer to transpose all columns (apart from date_sample) to two columns 'kommune',
#  'testsConducted'
#'casesDiagnosed'
#that hold the name of the kommune and the values of the number of diagnosed cases
pivot_longer(cols = !SampleDate, names_to = "kommune", values_to = "casesDiagnosed") %>%
arrange(kommune, SampleDate)
dc$kommune <- str_replace(dc$kommune, "Copenhagen", "København")
# merge data together
dc <- merge(dc, dsize)
# create new variables
dc %<>%
group_by(kommune) %>%
mutate(
casesDPer100k = casesDiagnosed / (population / 100000),
casesWPer100k = roll_sum(casesDPer100k, width = 7, min_obs = 1)
)
dc$casesDiagnosed <- as.integer(dc$casesDiagnosed)
head(dc, 50)
dk_data <- dc
dk_pop <-
dsize %>%
left_join(dk, by = c("kommune" = "NAME_2"))
# transforming dk_pop to a shapefile
sf_dk <- st_as_sf(dk_pop, sf_column_name = "geometry")
# getting the centroids to grab the coordinates from the shapefile - results
# in a matrix
dk_cent <- st_centroid(sf_dk)
dk_coords <- st_coordinates(dk_cent)
# converting the matrix into a df again
dk_coords_next <- as.data.frame(dk_coords)
# adding the coordinates to the kommunes and their population
dk_merge_coords <-
dsize %>%
cbind(dk_coords_next)
# merging the coordinates into the shapefile
sf_dk <-
dk_merge_coords %>%
merge(sf_dk)
# merging the coords/kommunes with the covid data
dk_merge_coords_test <-
dk_data %>%
merge(sf_dk)
# merging the covid data into the shapefile to plot it
df_dk_covid <-
dk_data %>%
group_by(kommune) %>%
merge(sf_dk)
# to plot the data it needs to be a shapefile (sf) again - creating shapefile
df_dk_covid <- st_as_sf(df_dk_covid, sf_column_name = "geometry")
start <- as.Date("2021-02-26")
end   <- as.Date("2022-02-15")
#Creates the coloring schema
bins <- c(0,5,50,200,500,1000,2500)
pal <- colorBin(
palette = c("#ffe0c4", "#febe8d","#fea469", "#e16d3d", "#a3573a", "#8D2D2B"),
bins = bins
)
while (start < end)
{
#if (start == "2020-02-29") {
#  start <- start + 1
#}
#else {
df <- df_dk_covid[df_dk_covid$SampleDate == start, ]
frame <- leaflet(df, options = leafletOptions(zoomSnap = 0, zoomDelta=0)) %>%
setView(lng = 10.801785, lat = 55.76392, zoom = 7) %>%
addLegend(
data = df,
position = "topright",
pal = pal,
values = ~ pal(df$casesWPer100k),
title = "Uge Incidens - pr. 100.000"
) %>%
addPolygons(
color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 1,
fillColor = ~ pal(df$casesWPer100k),
) %>%
addLabelOnlyMarkers(lng = 13.632050,
lat = 57.227758,
label = df$SampleDate,
labelOptions = labelOptions(noHide = T, textOnly= T, textsize = "30px")
) %>%
addLabelOnlyMarkers(lng = 14.932050,
lat = 56.427758,
label = sum(df$casesDiagnosed),
labelOptions = labelOptions(noHide = T, textOnly= T, textsize = "30px")
) %>%
addMarkers(lng = 14.082050,
lat = 56.427758,
label = "Nye smittede:",
options = markerOptions(opacity = 0),
labelOptions = labelOptions(noHide = T, textOnly=T, textsize = "30px")
)
mapshot(frame, file = paste0(getwd(), "/animation/", format(start), ".png"))
start <- start + 1
#}
}
View(dc)
start <- as.Date("2021-02-26")
end   <- as.Date("2022-02-15")
#Creates the coloring schema
bins <- c(0,5,50,200,500,1000,2500, 5000, 10000, 50000)
pal <- colorBin(
palette = c("#ffe0c4", "#febe8d","#fea469", "#e16d3d", "#a3573a", "#8D2D2B", "#691817", "#420908", "#040000"),
bins = bins
)
while (start < end)
{
#if (start == "2020-02-29") {
#  start <- start + 1
#}
#else {
df <- df_dk_covid[df_dk_covid$SampleDate == start, ]
frame <- leaflet(df, options = leafletOptions(zoomSnap = 0, zoomDelta=0)) %>%
setView(lng = 10.801785, lat = 55.76392, zoom = 7) %>%
addLegend(
data = df,
position = "topright",
pal = pal,
values = ~ pal(df$casesWPer100k),
title = "Uge Incidens - pr. 100.000"
) %>%
addPolygons(
color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 1,
fillColor = ~ pal(df$casesWPer100k),
) %>%
addLabelOnlyMarkers(lng = 13.632050,
lat = 57.227758,
label = df$SampleDate,
labelOptions = labelOptions(noHide = T, textOnly= T, textsize = "30px")
) %>%
addLabelOnlyMarkers(lng = 14.932050,
lat = 56.427758,
label = sum(df$casesDiagnosed),
labelOptions = labelOptions(noHide = T, textOnly= T, textsize = "30px")
) %>%
addMarkers(lng = 14.082050,
lat = 56.427758,
label = "Nye smittede:",
options = markerOptions(opacity = 0),
labelOptions = labelOptions(noHide = T, textOnly=T, textsize = "30px")
)
mapshot(frame, file = paste0(getwd(), "/animation/", format(start), ".png"))
start <- start + 1
#}
}
start <- as.Date("2021-02-26")
end   <- as.Date("2022-02-15")
#Creates the coloring schema
bins <- c(0,5,50,200,500,1000,2000,5000,10000,22000)
pal <- colorBin(
palette = c("#ffe0c4", "#febe8d","#fea469", "#e16d3d", "#a3573a", "#8D2D2B", "#691817", "#420908", "#040000"),
bins = bins
)
while (start < end)
{
#if (start == "2020-02-29") {
#  start <- start + 1
#}
#else {
df <- df_dk_covid[df_dk_covid$SampleDate == start, ]
frame <- leaflet(df, options = leafletOptions(zoomSnap = 0, zoomDelta=0)) %>%
setView(lng = 10.801785, lat = 55.76392, zoom = 7) %>%
addLegend(
data = df,
position = "topright",
pal = pal,
values = ~ pal(df$casesWPer100k),
title = "Uge Incidens - pr. 100.000"
) %>%
addPolygons(
color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 1,
fillColor = ~ pal(df$casesWPer100k),
) %>%
addLabelOnlyMarkers(lng = 13.632050,
lat = 57.227758,
label = df$SampleDate,
labelOptions = labelOptions(noHide = T, textOnly= T, textsize = "30px")
) %>%
addLabelOnlyMarkers(lng = 14.932050,
lat = 56.427758,
label = sum(df$casesDiagnosed),
labelOptions = labelOptions(noHide = T, textOnly= T, textsize = "30px")
) %>%
addMarkers(lng = 14.082050,
lat = 56.427758,
label = "Nye smittede:",
options = markerOptions(opacity = 0),
labelOptions = labelOptions(noHide = T, textOnly=T, textsize = "30px")
)
mapshot(frame, file = paste0(getwd(), "/animation/", format(start), ".png"))
start <- start + 1
#}
}
start <- as.Date("2021-02-26")
end   <- as.Date("2022-02-15")
#Creates the coloring schema
bins <- c(0,5,50,200,500,1000,2000,5000,10000,22000)
pal <- colorBin(
palette = c("#ffe0c4", "#febe8d","#fea469", "#e16d3d", "#a3573a", "#8D2D2B", "#691817", "#420908", "#040000"),
bins = bins
)
while (start < end)
{
#if (start == "2020-02-29") {
#  start <- start + 1
#}
#else {
df <- df_dk_covid[df_dk_covid$SampleDate == start, ]
frame <- leaflet(df, options = leafletOptions(zoomSnap = 0, zoomDelta=0)) %>%
setView(lng = 10.801785, lat = 55.76392, zoom = 7) %>%
addLegend(
data = df,
position = "topright",
pal = pal,
values = ~ pal(df$casesWPer100k),
title = "Uge Incidens - pr. 100.000"
) %>%
addPolygons(
color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 1,
fillColor = ~ pal(df$casesWPer100k),
) %>%
addLabelOnlyMarkers(lng = 13.632050,
lat = 57.227758,
label = df$SampleDate,
labelOptions = labelOptions(noHide = T, textOnly= T, textsize = "30px")
) %>%
addLabelOnlyMarkers(lng = 14.932050,
lat = 56.427758,
label = sum(df$casesDiagnosed),
labelOptions = labelOptions(noHide = T, textOnly= T, textsize = "30px")
) %>%
addMarkers(lng = 14.082050,
lat = 56.427758,
label = "Nye smittede:",
options = markerOptions(opacity = 0),
labelOptions = labelOptions(noHide = T, textOnly=T, textsize = "30px")
)
mapshot(frame, file = paste0(getwd(), "/animation/", format(start), ".png"))
start <- start + 1
#}
}
start <- as.Date("2021-02-26")
end   <- as.Date("2022-02-15")
#Creates the coloring schema
bins <- c(0,5,50,200,500,1000,2000,5000,10000,22000)
pal <- colorBin(
palette = c("#ffe0c4", "#febe8d","#fea469", "#e16d3d", "#a3573a", "#8D2D2B", "#691817", "#420908", "#040000"),
bins = bins
)
while (start < end)
{
#if (start == "2020-02-29") {
#  start <- start + 1
#}
#else {
df <- df_dk_covid[df_dk_covid$SampleDate == start, ]
frame <- leaflet(df, options = leafletOptions(zoomSnap = 0, zoomDelta=0)) %>%
setView(lng = 10.801785, lat = 55.76392, zoom = 7) %>%
addLegend(
data = df,
position = "topright",
pal = pal,
values = ~ pal(df$casesWPer100k),
title = "Uge Incidens - pr. 100.000"
) %>%
addPolygons(
color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 1,
fillColor = ~ pal(df$casesWPer100k),
) %>%
addLabelOnlyMarkers(lng = 13.632050,
lat = 57.227758,
label = df$SampleDate,
labelOptions = labelOptions(noHide = T, textOnly= T, textsize = "30px")
) %>%
addLabelOnlyMarkers(lng = 14.932050,
lat = 56.427758,
label = sum(df$casesDiagnosed),
labelOptions = labelOptions(noHide = T, textOnly= T, textsize = "30px")
) %>%
addMarkers(lng = 14.082050,
lat = 56.427758,
label = "Nye smittede:",
options = markerOptions(opacity = 0),
labelOptions = labelOptions(noHide = T, textOnly=T, textsize = "30px")
)
mapshot(frame, file = paste0(getwd(), "/animation/", format(start), ".png"))
start <- start + 1
#}
}
